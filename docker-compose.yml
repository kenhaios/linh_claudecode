version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: halinh-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: halinh
      MONGO_INITDB_ROOT_PASSWORD: halinh123
      MONGO_INITDB_DATABASE: ha-linh-dev
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d:ro
    networks:
      - halinh-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis cache
  redis:
    image: redis:7.0-alpine
    container_name: halinh-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass halinh123
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    networks:
      - halinh-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: halinh-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://halinh:halinh123@mongodb:27017/ha-linh-dev?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: halinh123
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      CORS_ORIGIN: http://localhost:3000
      # Vietnamese timezone
      TZ: Asia/Ho_Chi_Minh
      # OpenAI (will be set from .env)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
      - ./shared:/app/shared:ro
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - halinh-network
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package.json

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: halinh-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_SOCKET_URL: http://localhost:3001
      VITE_NODE_ENV: development
      # Vietnamese specific
      VITE_DEFAULT_LANGUAGE: vi
      VITE_DEFAULT_TIMEZONE: Asia/Ho_Chi_Minh
      TZ: Asia/Ho_Chi_Minh
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./shared:/app/shared:ro
    depends_on:
      - backend
    networks:
      - halinh-network
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json

  # MongoDB Express (Database admin interface)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: halinh-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: halinh
      ME_CONFIG_MONGODB_ADMINPASSWORD: halinh123
      ME_CONFIG_MONGODB_URL: mongodb://halinh:halinh123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - halinh-network
    profiles:
      - tools

  # Redis Commander (Redis admin interface)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: halinh-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:1:halinh123
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    depends_on:
      - redis
    networks:
      - halinh-network
    profiles:
      - tools

  # Mailhog (Email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: halinh-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - halinh-network
    profiles:
      - tools

  # Nginx (Reverse proxy for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: halinh-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/ssl/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - halinh-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/data/mongodb
  mongodb_config:
    driver: local
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/data/redis

networks:
  halinh-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16